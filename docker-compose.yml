version: '3.8'

services:
  # Node.js application with PM2
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: youtube-api
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - redis
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/youtube_videos
      - REDIS_URL=redis://redis:6379
      - YOUTUBE_API_KEYS=${YOUTUBE_API_KEYS}
      - SEARCH_QUERY=${SEARCH_QUERY:-football}
      - FETCH_INTERVAL=${FETCH_INTERVAL:-10000}
      - MAX_RESULTS=${MAX_RESULTS:-50}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-60000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - YOUTUBE_QUOTA_LIMIT=${YOUTUBE_QUOTA_LIMIT:-10000}
    volumes:
      - app_logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MongoDB database
  mongo:
    image: mongo:6
    container_name: youtube-api-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command: ["--bind_ip", "0.0.0.0"]

  # Redis for API key management
  redis:
    image: redis:7-alpine
    container_name: youtube-api-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local